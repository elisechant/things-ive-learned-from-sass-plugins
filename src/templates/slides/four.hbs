<section>
	<h1><span class="sol-yellow">3.</span> Use objects for configs.</h1>

	<aside class="notes">
		Three. Use objects for configs.
	</aside>
</section>

<section>
	<h1 class="fragment" data-fragment-index="0">Use objects for configs.</h1>

	<div class="each-on-top-of">
		<div class="each mine">
			<img src="{{ SP.DIR_IMAGES }}/four-mine.jpg" height="" width="">
		</div>

		<div class="each toolkit fragment" data-fragment-index="0">
			<img src="{{ SP.DIR_IMAGES }}/four-toolkit.jpg" height="" width="720">
		</div>
	</div>


	<aside class="notes">
		Something that annoyed me about Sass<br>
		was the unorganised key-value mess that the config file becomes<br>
		I always wanted to write Sass configs with an Object syntax like we might do in JavaScript <br>
		Well <strong><u>you can</u> use objects for configs<strong  style="color:green"> [NEXT]</strong></strong>. Toolkit do <br>
		in Sass 3.3 we have maps, which are Objects.<br>
		...And now that our config is an Object <strong  style="color:green"> [NEXT]</strong><br>
	</aside>



</section>

<section>
	<h1>Access the config object with getters and setters.</h1>
	<br>
	<div class="toolkit">
		<img src="{{ SP.DIR_IMAGES }}/four-2-config-item-toolkit.jpg" height="" width="">
	</div>
	<br>
	<br>
	<div class="toolkit no-label">
		<img src="{{ SP.DIR_IMAGES }}/four-2-getters-toolkit.jpg" height="" width="">
	</div>
	<br>
	<br>
	<div class="toolkit no-label">
		<img src="{{ SP.DIR_IMAGES }}/four-2-use-getter-toolkit.jpg" height="" width="">
	</div>

	<aside class="notes">
		we can create getter and setter methods to read and write to them just like Toolkit do<br>
	</aside>
</section>




<section>
	<h1><span class="sol-yellow">9.</span> Guard arguments</h1>

	<aside class="notes">
		If you code is going to be reusable, you need to be <br>
		Guarding your arguments<strong style="color:green"> [DOWN]</strong>
	</aside>
</section>


<section>
	<h1>.. check for empty arguments</h1>

	<br>
	<div class="toolkit">
		<img src="{{ SP.DIR_IMAGES }}/two-empty-params-toolkit.jpg" width="" height="">
	</div>

	<aside class="notes">
		you can check for empty arguments with the length function like Toolkit do,<br>
		now you can do something with that condition like setting a default value or emitting a warning<strong style="color:green"> [DOWN]</strong>
	</aside>
</section>


<section>
	<h1>.. predefine <em>optional</em> arguments with <code>null</code></h1>

	<br>
	<div class="toolkit">
		<img src="{{ SP.DIR_IMAGES }}/two-null-toolkit.jpg" width="" height="">
	</div>

	<aside class="notes">
		Predefine optional arguments with null<br>
		this could be a good way of turning off a feature in your mixin<strong style="color:green"> [DOWN]</strong>
	</aside>
</section>


<section>
	<h1>.. guard the argument order</h1>

	<br>
	<div class="compass">
		<img src="{{ SP.DIR_IMAGES }}/two-idiot-compass.jpg" width="" height="">
	</div>

	<aside class="notes">
		or you can guard against argument order like Compass do<br>
		<br>
		And the point is that there are many logic controls <br>
		that we have available to us<br>
		so <u>we should</u> use them more<strong style="color:#1e90ff">[RIGHT]</strong>
	</aside>
</section>

